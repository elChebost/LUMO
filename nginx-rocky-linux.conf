# Configuración de Nginx para LUMO en Rocky Linux 9.6
# Ubicación: /etc/nginx/conf.d/lumo.conf
# Dominio: lumo.anima.edu.uy
# Proyecto: /opt/proyecto/LUMO

# Servidor principal HTTP
server {
    listen 80;
    server_name lumo.anima.edu.uy;
    
    # Logs específicos del proyecto
    access_log /var/log/nginx/lumo-access.log;
    error_log /var/log/nginx/lumo-error.log;

    # Tamaño máximo de subida (para avatares, etc.)
    client_max_body_size 10M;

    # Root del frontend construido
    root /opt/proyecto/LUMO/frontend/dist;
    index index.html;

    # ==============================================
    # PROXY PARA BACKEND API (Node.js Express)
    # ==============================================
    
    location /api {
        # Proxy pass al backend Node.js
        proxy_pass http://127.0.0.1:3000;
        
        # Headers necesarios para el proxy
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Headers CORS (adicionales a los del backend)
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
        
        # Responder a preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            add_header 'Content-Length' '0';
            add_header 'Content-Type' 'text/plain';
            return 204;
        }
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # No cachear respuestas del API
        proxy_cache_bypass $http_upgrade;
    }

    # ==============================================
    # HEALTH CHECK
    # ==============================================
    
    location /health {
        proxy_pass http://127.0.0.1:3000/health;
        access_log off; # No loguear health checks
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ==============================================
    # ARCHIVOS SUBIDOS (UPLOADS)
    # ==============================================
    
    location /uploads {
        proxy_pass http://127.0.0.1:3000/uploads;
        
        # Headers para uploads
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Cache para assets subidos
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # ==============================================
    # FRONTEND (React SPA)
    # ==============================================
    
    # Servir archivos estáticos del frontend
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers de seguridad
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }

    # Cache para assets estáticos (JS, CSS, imágenes)
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # No loguear favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # No loguear robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
}

# ==============================================
# CONFIGURACIÓN PARA HTTPS (Después de obtener SSL)
# ==============================================
# Descomenta esta sección después de configurar SSL con Let's Encrypt

# server {
#     listen 443 ssl http2;
#     server_name lumo.anima.edu.uy;
#     
#     # Certificados SSL
#     ssl_certificate /etc/letsencrypt/live/lumo.anima.edu.uy/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/lumo.anima.edu.uy/privkey.pem;
#     
#     # Configuración SSL moderna
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS (HTTP Strict Transport Security)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Incluir la misma configuración que el servidor HTTP
#     include /etc/nginx/conf.d/lumo.conf;
# }
# 
# # Redirigir HTTP a HTTPS
# server {
#     listen 80;
#     server_name lumo.anima.edu.uy;
#     return 301 https://$server_name$request_uri;
# }
